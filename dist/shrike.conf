# This is the default configuration file for Shrike.
# $$Id$
#
# Semi-colons must immediately follow their statements
# if you don't want random whitespace in your settings.
#
# Anything starting with `#' is ignored.
 
# The serverinfo{} block defines how we
# appear on the IRC network.
serverinfo {
    # name
    # The server name that this program uses on the IRC network.
    # This is the name you'll have to use in C:/N:Lines.
    name = shrike.example.net;

    # desc
    # The ``server comment'' we send to the IRC network.
    desc = Shrike IRC Services;

    # uplink
    # The server that services connects to.
    uplink = irc.example.net;

    # port
    # The port that services connects to.
    port = 6667;

    # pass
    # The password in the N:Line used for linking.
    pass = linkage;

    # vhost
    # If you wish to bind to a source IP, set this.
    #vhost = 192.168.1.10;

    # recontime
    # The number of seconds before we reconnect to the uplink.
    recontime = 10;

    # restarttime
    # The number of seconds before we restart.
    restarttime = 10;

    # expire
    # The number of days before inactive registrations are expired.
    expire = 30;

    # netname
    # The name of your network.
    netname = misconfigured network;

    # adminname
    # The name of the person running this service.
    adminname = misconfigured admin;

    # adminemail
    # The email address of the person running this service.
    adminemail = misconfigured@admin.tld;

    # mta
    # The full path to your mail transfer agent.
    # This is used for email authorization and password retrieval.
    mta = /usr/sbin/sendmail;

    # loglevel
    # Specify the minimum level of logging information to record
    # in the main Shrike logfile.  Valid values (from highest to lowest) are:
    # DEBUG, CRITICAL, ERROR, WARNING, NOTICE, INFO, and NONE. 
    loglevel = NOTICE;

    # maxusers
    # What are the maximum usernames that one email address can register?
    maxusers = 5;

    # maxchans
    # What are the maximum channels that one username can register?
    maxchans = 5;

    # auth
    # What type of username registration authorization do you want?
    # If "EMAIL," Shrike will send a confirmation email to the address to
    # ensure it's valid. If "NORMAL," no message will be sent and the username
    # will be fully registered.
    # Valid values are: EMAIL, NORMAL.
    auth = EMAIL;

    # casemapping
    # Specify the casemapping to use. Almost all TSora (and any that follow
    # the RFC correctly) ircds will use rfc1459 casemapping. Bahamut, Unreal,
    # and other ``Dalnet'' ircds will use ascii casemapping.
    # Valid values are: rfc1459, ascii.
    casemapping = rfc1459;
}

# The clientinfo{} block defines how the
# services client appears on the IRC network.
clientinfo {
  # nick
  # The nickname we want the client to have.
  nick = S;

  # user
  # The username we want the client to have.
  user = service;

  # host
  # The hostname we want the client to have.
  host = shrike.malkier.net;

  # real
  # The GECOS of the client.
  real = Shrike IRC Services;

  # chan
  # The channel the client joins and sends certain
  # messages to.
  chan = #shrike;

  # leave_chans
  # Do we leave registered channels after everyone else has left?
  # Turning this off serves little purpose.
  leave_chans = yes;

  # sra
  # Enter at least one services root administrator.  This must be a registered
  # username.  If the username doesn't yet exist you'll need to REHASH this
  # file before changes take affect.
  # Define as many of these as you'd like.
  sra = emw;
}
